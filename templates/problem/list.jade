extends common-content
- load staticfiles
- load cache
- load i18n

block media
    if has_select2
        link(href="{{ SELECT2_CSS_URL }}", type="text/css", media="screen", rel="stylesheet")
    style.
        @media (max-width: 550px) {
            #problem-table tr :nth-child(6) {
                display: none;
            }
        }

        @media (max-width: 450px) {
            #problem-table tr :nth-child(4) {
                display: none;
            }
        }

        @media (max-width: 350px) {
            #problem-table tr :nth-child(3) {
                display: none;
            }
        }

block js_media
    if has_select2
        script(type='text/javascript', src='{{ SELECT2_JS_URL }}')
        script.
            $(function() {
                $('#category').select2();
                $('#types').select2({multiple: 1, placeholder: '{% trans "Filter by type..." %}'});
                // This is incredibly nasty to do but it's needed because otherwise the select2 steals the focus
                $('#search').keypress(function (e) {
                    if (e.keyCode == 13)
                        $('#go').click();
                });
            });

    script(src='{% static "tablesorter.js" %}', type='text/javascript')
    script(type='text/javascript').
        $(document).ready(function() {
            $.tablesorter.addParser({
                id: 'solvedsort',
                is: function(s) {
                    return false;
                },
                format: function(s, table, cell, cellIndex) {
                    return $(cell).attr('solved');
                },
                type: 'numeric'
            });

            $('#problem-table').tablesorter({
                headers: {
                    0: {
                        sorter: 'solvedsort'
                    }
                },
                textExtraction: function(node) {
                    node = $(node);
                    var text = node.text().replace(/^\s+|\s+$/g, '');
                    return (node.hasClass('p') ? text.replace(/p$/, '') : text);
                }
            });

            var info_float = $('.info-float');
            var container = $('#content-right');
            if (window.bad_browser) {
                container.css('float', 'right');
            } else if (!featureTest('position', 'sticky')) {
                fix_div(info_float, 55);
                $(window).resize(function () {
                    info_float.width(container.width());
                });
                info_float.width(container.width());
            }
        });

block title_ruler

block title_row
    - var tab = 'list'
    - var title = 'Problems'
    include problem/problem_list_tabs

block body
    #common-content
        block before_table
        if not IN_CONTEST
            #content-right.problems: .info-float
                h3 {% trans "Problem search" %}
                hr
                form#filter-form(name='form', action='', method='get')
                    input#search(type='text', name='search', value=search_query, placeholder='{% trans "Search problems..." %}')
                    br
                    if has_fts
                        input#full_text(type='checkbox', name='full_text', checked=('checked' if full_text else undefined), value='1')
                        label(for='full_text') {% trans "Full text search" %}
                        br
                    if request.user.is_authenticated
                        input#hide_solved(onclick='form.submit()', type='checkbox', name='hide_solved', checked=('checked' if hide_solved else undefined), value='1')
                        label(for='hide_solved') {% trans "Hide solved problems" %}
                        br
                    input#show_types(onclick='form.submit()', type='checkbox', name='show_types', checked=('checked' if show_types else undefined), value='1')
                    label(for='show_types') {% trans "Show problem tags" %}
                    br
                    .filter-form-group
                        label(for='category'): i {% trans "Category" %}
                        select#category(name='category', onchange='form.submit()')
                            if category
                                option(value='', selected) {% trans "All" %}
                            else
                                option(value='') {% trans "All" %}
                            option(disabled) ---
                            each group in categories
                                if group.id == category
                                    option(value=group.id, selected)= group.full_name
                                else
                                    option(value=group.id)= group.full_name
                    if show_types
                        .filter-form-group
                            label(for='type'): i {% trans "Problem types" %}
                            select#types(name='type', multiple)
                                each type in problem_types
                                    if type.id in selected_types
                                        option(value=type.id, selected)= type.full_name
                                    else
                                        option(value=type.id)= type.full_name
                    hr
                    a#go.button(onclick='form.submit()') {% trans "Go" %}
                    a.button(href='{% url "problem_random" %}') {% trans "Random" %}
        #content-left.problems
            if page_obj.num_pages > 1
                div(style='margin-bottom: 7px; margin-top: 5px;')
                    include list_pages

            table#problem-table.table.striped
                thead: tr
                    if request.user.is_authenticated
                        th.solved
                            i.fa.fa-check
                    th.problem {% trans "Problem" %}
                    th.category {% trans "Category" %}
                    if show_types
                        th {% trans "Types" %}
                    th.points {% trans "Points" %}
                    th.ac-rate {% trans "AC %" %}
                    th.users {% trans "Users" %}
                tbody: each problem in problems
                    tr
                        if request.user.is_authenticated
                            if problem.id in completed_problem_ids
                                td(solved='1'): i.fa.fa-check-circle(style='color:#44AD41')
                            else
                                td(solved='0'): i.fa.fa-minus-circle(style='color:#DE2121')
                        td.problem
                            a(href='{% url "problem_detail" problem.code %}')= problem.i18n_name
                        td.category= problem.group.full_name
                        if show_types
                            td.types
                                each type in problem.types_list
                                    span.type-tag= type
                                    if not forloop.last
                                        = ', '
                        td.p #{problem.points | floatformat}
                            if problem.partial
                                | p
                        td.ac-rate #{problem.ac_rate|floatformat:"1"}%
                        td.users
                            a(href='{% url "ranked_submissions" problem.code %}')= problem.user_count
            if page_obj.num_pages > 1
                div(style='margin-top:10px;')
                    include list_pages
    br

extends common-content
- load staticfiles
- load cache
- load i18n

block media
    if has_select2
        link(href="{{ SELECT2_CSS_URL }}", type="text/css", media="screen", rel="stylesheet")
    style.
        @media (max-width: 550px) {
            #problem-table tr :nth-child(6) {
                display: none;
            }
        }

        @media (max-width: 450px) {
            #problem-table tr :nth-child(4) {
                display: none;
            }
        }

        @media (max-width: 350px) {
            #problem-table tr :nth-child(3) {
                display: none;
            }
        }

        #problem-table th a {
            color: inherit;
        }

block js_media
    if has_select2
        script(type='text/javascript', src='{{ SELECT2_JS_URL }}')
        script.
            $(function() {
                $('#category').select2();
                $('#types').select2({multiple: 1, placeholder: '{% trans "Filter by type..." %}'});
                // This is incredibly nasty to do but it's needed because otherwise the select2 steals the focus
                $('#search').keypress(function (e) {
                    if (e.keyCode == 13)
                        $('#go').click();
                });
            });

    if use_tablesorter
        script(src='{% static "tablesorter.js" %}', type='text/javascript')
        script(type='text/javascript').
            $(function() {
                $.tablesorter.addParser({
                    id: 'solvedsort',
                    is: function (s) {
                        return false;
                    },
                    format: function (s, table, cell, cellIndex) {
                        return $(cell).attr('solved');
                    },
                    type: 'numeric'
                });

                $('#problem-table').tablesorter({
                    headers: {
                        0: {
                            sorter: 'solvedsort'
                        }
                    },
                    textExtraction: function (node) {
                        node = $(node);
                        var text = node.text().replace(/^\s+|\s+$/g, '');
                        return (node.hasClass('p') ? text.replace(/p$/, '') : text);
                    }
                });
            });

    script(type='text/javascript').
        $(function() {
            var info_float = $('.info-float');
            var container = $('#content-right');
            if (window.bad_browser) {
                container.css('float', 'right');
            } else if (!featureTest('position', 'sticky')) {
                fix_div(info_float, 55);
                $(window).resize(function () {
                    info_float.width(container.width());
                });
                info_float.width(container.width());
            }
        });

block title_ruler

block title_row
    - var tab = 'list'
    - var title = 'Problems'
    include problem/problem_list_tabs

block body
    #common-content
        block before_table
        if not IN_CONTEST
            #content-right.problems: .info-float
                include problem/search_form
                br
                include problem/recent_problems

        #content-left.problems
            if page_obj.num_pages > 1
                div(style='margin-bottom: 7px; margin-top: 3px;')
                    include list_pages

            table#problem-table.table.striped
                thead: tr
                    if use_tablesorter
                        if request.user.is_authenticated
                            th.solved: i.fa.fa-check
                        th.problem {% trans "Problem" %}
                        th.category {% trans "Category" %}
                        if show_types
                            th {% trans "Types" %}
                        th.points {% trans "Points" %}
                        th.ac-rate {% trans "AC %" %}
                        th.users {% trans "Users" %}
                    else
                        if request.user.is_authenticated
                            th.solved: a(href=sort_links['solved']) #[i.fa.fa-check]#{sort_order.solved}
                        th.problem: a(href=sort_links['name']) {% trans "Problem" %}#{sort_order.name}
                        th.category: a(href=sort_links['group']) {% trans "Category" %}#{sort_order.group}
                        if show_types
                            th: a(href=sort_links['type']) {% trans "Types" %}#{sort_order.type}
                        th.points: a(href=sort_links['points']) {% trans "Points" %}#{sort_order.points}
                        th.ac-rate: a(href=sort_links['ac_rate']) {% trans "AC %" %}#{sort_order.ac_rate}
                        th.users: a(href=sort_links['user_count']) {% trans "Users" %}#{sort_order.user_count}
                tbody: each problem in problems
                    tr
                        if request.user.is_authenticated
                            if problem.id in completed_problem_ids
                                td(solved='1'): i.fa.fa-check-circle(style='color:#44AD41')
                            else
                                td(solved='0'): i.fa.fa-minus-circle(style='color:#DE2121')
                        td.problem
                            a(href='{% url "problem_detail" problem.code %}')= problem.i18n_name
                        td.category= problem.group.full_name
                        if show_types
                            td.types
                                each type in problem.types_list
                                    span.type-tag= type
                                    if not forloop.last
                                        = ', '
                        td.p #{problem.points | floatformat}
                            if problem.partial
                                | p
                        td.ac-rate #{problem.ac_rate|floatformat:"1"}%
                        td.users
                            a(href='{% url "ranked_submissions" problem.code %}')= problem.user_count
            if page_obj.num_pages > 1
                div(style='margin-top:10px;')
                    include list_pages
    br

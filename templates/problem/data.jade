extends base

- load i18n

block js_media
    if has_select2
        script(type='text/javascript', src='{{ SELECT2_JS_URL }}')
        script(type='text/javascript').
            $(function () {
                $('#case-table').on('add-row', function (e, $tr) {
                    $tr.find('input').filter('[id$=file]').each(function () {
                        var $select, val = $(this).replaceWith($select = $('<select/>').attr({
                            id: $(this).attr('id'),
                            name: $(this).attr('name'),
                            style: 'width: 100%'
                        })).val();
                        $select.select2({
                            data: window.valid_files,
                            allowClear: true,
                            placeholder: ''
                        }).val(val).trigger('change');
                    });
                });
            });

    script(type='text/javascript').
        window.valid_files = #{valid_files_json};

        $(function () {
            var order = 0;
            var $table = $('#case-table');

            function swap_row($a, $b) {
                var $a_order = $a.find('input[id$=order]'), $b_order = $b.find('input[id$=order]');
                var order = $a_order.val();
                $a_order.val($b_order.val());
                $b_order.val(order);
                $b.after($a);
            }

            $table.on('add-row', function (e, $tr) {
                $tr.find('input').filter('[id$=order]').attr('type', 'hidden').val(++order)
                        .after($('<i>', {'class': 'fa case-move fa-chevron-down'}).click(function () {
                            var $tr = $(this).parents('tr'), $next = $tr.next();
                            if ($next.length)
                                swap_row($tr, $next);
                        }))
                        .after($('<i>', {'class': 'fa case-move fa-chevron-up'}).click(function () {
                            var $tr = $(this).parents('tr'), $prev = $tr.prev();
                            if ($prev.length)
                                swap_row($prev, $tr);
                        }));

                var $opts = $tr.find('input').slice(4, 8);
                var $files = $tr.find('select').slice(1);
                $tr.find('select[id$=type]').change(function () {
                    switch ($(this).val()) {
                        case 'C':
                            $opts.prop('disabled', false);
                            $files.prop('disabled', false);
                            break;
                        case 'S':
                            $opts.prop('disabled', false);
                            $files.prop('disabled', true);
                            break;
                        default:
                            $opts.prop('disabled', true);
                            $files.prop('disabled', true);
                    }
                }).change();
            }).find('tbody:first').find('tr').each(function () {
                $table.trigger('add-row', [$(this)]);
            });

            $('form').submit(function () {
                $table.find('tbody:first').find('tr').each(function () {
                    var filled = false;
                    $(this).find('input').each(function () {
                        var $this = $(this);
                        if ($this.attr('type') === 'checkbox')
                            filled |= $this.is(':checked');
                        else if (!$this.attr('name').endsWith('order'))
                            filled |= !!$this.val();
                    });
                    if (!filled)
                        $(this).find('input[id$=order]').val('');
                });
            });

            var $total = $('#id_cases-TOTAL_FORMS');

            $('a#add-case-row').click(function () {
                var $tr;
                $table.find('tbody:first').append($tr = $($table.find('.extra-row-body').html()
                        .replace(/__prefix__/g, $total.val())));
                $tr.find('input[id$=order]').val(++order);
                $total.val($total.val() + 1);
                $table.trigger('add-row', [$tr]);
                return false;
            });
        });

block media
    if has_select2
        link(href='{{ SELECT2_CSS_URL }}', type='text/css', media='screen', rel='stylesheet')
    style.
        .case-move {
            cursor: pointer;
        }

        #case-table > tbody > tr:first-child .case-move.fa-chevron-up,
        #case-table > tbody > tr:last-child .case-move.fa-chevron-down {
            color: #ccc;
            cursor: not-allowed;
        }

        #case-table .select2 {
            text-align: initial;
        }

        .bad-file input, .bad-file .select2-selection {
            border-color: red;
        }

block body
    form(action='', method='POST', enctype='multipart/form-data')
        - csrf_token
        #{cases_formset.management_form}
        table.table #{data_form.as_table}
        table.table#case-table
            thead: tr
                th {% trans "Order" %}
                th {% trans "Type" %}
                th {% trans "Input file" %}
                th {% trans "Output file" %}
                th {% trans "Points" %}
                th {% trans "Pretest?" %}
                th {% trans "Output prefix" %}
                th {% trans "Output limit" %}
                th {% trans "Generator args" %}
                if cases_formset.can_delete
                    th {% trans "Delete?" %}
            tbody: each form in all_case_forms
                if form.non_field_errors
                    tr: td(colspan=(9 + cases_formset.can_delete)) #{form.non_field_errors}
                if form.prefix and '__prefix__' in form.prefix
                    </tbody><tbody class="extra-row-body" style="display: none">
                tr
                    td #{form.id}#{form.order}
                    td #{form.type.errors}#{form.type}
                    td(class=(None if form.empty_permitted or form['input_file'].value() in valid_files else 'bad-file'))
                        | #{form.input_file.errors}#{form.input_file}
                    td(class=(None if form.empty_permitted or form['output_file'].value() in valid_files else 'bad-file'))
                        | #{form.output_file.errors}#{form.output_file}
                    td #{form.points.errors}#{form.points}
                    td #{form.is_pretest.errors}#{form.is_pretest}
                    td #{form.output_prefix.errors}#{form.output_prefix}
                    td #{form.output_limit.errors}#{form.output_limit}
                    td #{form.generator_args.errors}#{form.generator_args}
                    if cases_formset.can_delete
                        td #{form.DELETE}
        input(class='button', type='submit', value='{% trans "Submit!" %}')
        a#add-case-row(href='#') #[i.fa.fa-plus] {% trans "Add new case" %}

extends base

- load i18n

block js_media
    script(type='text/javascript').
        window.valid_files = #{valid_files};

        $(function () {
            var order = 0;
            inputs.filter('[id$=order]').attr('type', 'hidden').each(function () {
                $(this).val(++order).after($('<i>', {'class': 'fa case-move fa-chevron-down'}))
                        .after($('<i>', {'class': 'fa case-move fa-chevron-up'}));
            });

            function swap_row($a, $b) {
                var $a_order = $a.find('input[id$=order]'), $b_order = $b.find('input[id$=order]');
                var order = $a_order.val();
                $a_order.val($b_order.val());
                $b_order.val(order);
                $b.after($a);
            }

            $('.case-move.fa-chevron-up').click(function () {
                var $tr = $(this).parents('tr'), $prev = $tr.prev();
                if ($prev.length)
                    swap_row($prev, $tr);
            });

            $('.case-move.fa-chevron-down').click(function () {
                var $tr = $(this).parents('tr'), $next = $tr.next();
                if ($next.length)
                    swap_row($tr, $next);
            });

            $('form').submit(function () {
                $('#case-table').find('tbody').find('tr').each(function ($this) {
                    var filled = false;
                    $(this).find('input').each(function () {
                        var $this = $(this);
                        if ($this.attr('type') === 'checkbox')
                            filled |= $this.is(':checked');
                        else if (!$this.attr('name').endsWith('order'))
                            filled |= !!$this.val();
                    });
                    if (!filled)
                        $(this).find('input[id$=order]').val('');
                });
            });
        });

    if has_select2
        script(type='text/javascript', src='{{ SELECT2_JS_URL }}')
        script(type='text/javascript').
            $(function () {
                var inputs = $('#case-table').find('input');

                inputs.filter('[id$=file]').each(function () {
                    var $select, val = $(this).replaceWith($select = $('<select/>').attr({
                        id: $(this).attr('id'),
                        name: $(this).attr('name')
                    })).val();
                    $select.select2({
                        data: window.valid_files,
                        allowClear: true,
                        placeholder: ''
                    }).val(val).trigger('change');
                });
            });

block media
    if has_select2
        link(href='{{ SELECT2_CSS_URL }}', type='text/css', media='screen', rel='stylesheet')
    style.
        .case-move {
            cursor: pointer;
        }

        #case-table > tbody > tr:first-child .case-move.fa-chevron-up,
        #case-table > tbody > tr:last-child .case-move.fa-chevron-down {
            color: #ccc;
            cursor: not-allowed;
        }

block body
    form(action='', method='POST', enctype='multipart/form-data')
        - csrf_token
        #{cases_formset.management_form}
        table.table #{data_form.as_table}
        table.table#case-table
            thead: tr
                th {% trans "Order" %}
                th {% trans "Type" %}
                th {% trans "Input file" %}
                th {% trans "Output file" %}
                th {% trans "Points" %}
                th {% trans "Pretest?" %}
                th {% trans "Output prefix" %}
                th {% trans "Output limit" %}
                th {% trans "Generator args" %}
                if cases_formset.can_delete
                    th {% trans "Delete?" %}
            tbody: each form in cases_formset
                if form.non_field_errors
                    tr: td(colspan=(9 + cases_formset.can_delete)) #{form.non_field_errors}
                tr
                    td #{form.id}#{form.order}
                    td #{form.type.errors}#{form.type}
                    td #{form.input_file.errors}#{form.input_file}
                    td #{form.output_file.errors}#{form.output_file}
                    td #{form.points.errors}#{form.points}
                    td #{form.is_pretest.errors}#{form.is_pretest}
                    td #{form.output_prefix.errors}#{form.output_prefix}
                    td #{form.output_limit.errors}#{form.output_limit}
                    td #{form.generator_args.errors}#{form.generator_args}
                    if cases_formset.can_delete
                        td #{form.DELETE}
        input(class='button', type='submit', value='{% trans "Submit!" %}')
